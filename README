WARNING: May contain trace amounts of lisp.

ABOUT
-----

SykoSoMaTIC is a fairly general, flexible, powerful, and all-around
awesome game engine meant mainly for text-based online games. Chunks
of it can be used for other purposes, like simple chat servers with
accounts. It also includes a parser and basic game-object classes
like room, mobile, avatar, item, etc, that can be built upon to create
any online text-based game in a fairly short amount of time.


REQUIREMENTS
------------

* cl-store (http://common-lisp.net/project/cl-store/)
* bknr (http://bknr.net) (more specifically, bknr.datastore and bknr.indices)
* cl-ppcre (http://weitz.de/cl-ppcre/)
* cl-cont (http://common-lisp.net/project/cl-cont/)
* bordeaux-threads (http://common-lisp.net/project/bordeaux-threads/)
* usocket (http://common-lisp.net/project/usocket/)
* ironclad (http://method-combination.net/lisp/ironclad/)
* xmls (http://common-lisp.net/project/xmls/)
* fiveam (http://common-lisp.net/project/bese/FiveAM.html)
* SBCL (http://www.sbcl.org/) >= 1.0.20
* Linux x86, probably x64 (untested).

INSTALLATION
------------

1. Get all the required source code
   A. With asdf-install:
      *CL-USER> (require 'asdf-install)
      *CL-USER> (asdf-install:install :cl-store)
      *CL-USER> (asdf-install:install :cl-ppcre)
      *etc..

   B. Manually
      * download the tarballs for each dependency.
      * extract to ~/.sbcl/site/ (or whereven you put your sources)
      * expose relevant .asd files to Lisp.
   
	See http://www.cliki.net/asdf for generic information on how to use
	ASDF.
	Basically, create symlinks to the .asd files for each dep.
	inside your systems folder for your lisp (like ~/.sbcl/systems/)

2. Load up sykosomatic.
   A. In Slime with SBCL:
      * (require 'sykosomatic)
      * Hope for the best!

3. Get yourself into the package.
   * (in-package sykosomatic)

4. ???

5. Happy Hacking!


TESTING THE SERVER 
------------------ 

The server runs on port 4000 by default, and will accept external
connections by default. If you want to prevent those, start the server
with :address "127.0.0.1".

Telnet clients can connect with 'telnet <address> <port>', and the
engine can currently handle all the garbage telnet likes sending (I
think).  The current function in the client loop echoes back the
generated abstract syntax tree from whatever the client sends in.

You can prompt a client for input, but since the netcode uses
continuations, you'll have to defun/cc anything that uses
prompt-client, and toss the input into a variable that you can check
out afterward. You can't just have it output straight into the repl.

Logs are all tossed into ~/.sykosomatic/logs/sykosomatic.log right
now.

Oh, and if you want to change any directories, read through
config.lisp. You can set the base game directory there.

